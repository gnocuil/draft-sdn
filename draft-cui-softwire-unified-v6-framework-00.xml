<?xml version="1.0" encoding="US-ASCII"?>

<?rfc toc="yes"?>
<?rfc tocompact="yes"?>
<?rfc tocdepth="6"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>
<?rfc autobreaks="no"?>
<?rfc subcompact="no"?>

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
    <!ENTITY rfc2119 PUBLIC "" "http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml">
    <!ENTITY rfc6146 PUBLIC "" "http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6146.xml">
    <!ENTITY rfc6241 PUBLIC "" "http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6241.xml">
    <!ENTITY rfc6333 PUBLIC "" "http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6333.xml">
    <!ENTITY rfc7084 PUBLIC "" "http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7084.xml">
    
    <!ENTITY I-D.ietf-softwire-lw4over6 SYSTEM 'http://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-softwire-lw4over6.xml'>
    <!ENTITY I-D.ietf-softwire-map SYSTEM 'http://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-softwire-map.xml'>
]>

<rfc category="std" docName="draft-cui-softwire-unified-v6-framework-00" ipr="trust200902">
    
<front>
  
  <title abbrev="Unified v6 Transition Framework">Unified IPv6 Transition Framework With Flow-based Forwarding</title>

<!-- Author List -->
  <author fullname="Yong Cui" initials="Y." surname="Cui">
    <organization>Tsinghua University</organization>
    <address>
      <postal>
        <street/>
          <city>Beijing</city>
          <code>100084</code>
          <country>P.R.China</country>
      </postal>
      <phone>+86-10-6260-3059</phone>
      <email>yong@csnet1.cs.tsinghua.edu.cn</email>
    </address>
  </author>
  
  <author fullname="Yuchi Chen" initials="Y." surname="Chen">
    <organization>Tsinghua University</organization>   
    <address>
      <postal>
        <street/>
          <city>Beijing</city>
          <region></region>
          <code>100084</code>
          <country>P.R.China</country>
      </postal>
      <phone>+86-10-6278-5822</phone>
      <email>chenycmx@gmail.com</email>
    </address>
  </author>
      
  <date year="2014"/>

  <abstract>
    <t>This document describes a software defined networking (SDN) based unified IPv6 transition framework.
       This framework makes use of the flow-based packet forwarding technology,
       which can simplify the implementation of both control plane and data plane operations of transition mechanisms.
       The purpose of this work is to provide an integrated and flexible framework to implement and deploy transition mechanisms,
       such as MAP-E, Lightweight 4over6, etc.
    </t>     
  </abstract>
  
  <note title="Requirements Language">
      <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
      "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
      document are to be interpreted as described in <xref
      target="RFC2119"></xref>.</t>
    </note>
  
</front>

<middle>
 <section anchor="Introduction" title="Introduction">
    <t>Currently several IPv6 transition mechanisms have been proposed,
      such as DS-Lite <xref target="RFC6333"/>, MAP-E <xref target="I-D.ietf-softwire-map"/>, and 
      Lightweight 4over6 <xref target="I-D.ietf-softwire-lw4over6"/>.
      These mechanisms have been or being implemented by the industry.
      However, each of these transition mechanisms have some unique features in control or data plane behavior
      such as IP provisioning, so the mechanisms require different dedicated implementations on both CPE and BR side and 
      it's complicated and a big cost to upgrade existing devices to support new mechanisms.
    </t>
    
    <t>This document describes a SDN-based IPv6 transition framework.
      This framework adopts flow-based packet forwarding technology on transition devices,
      which can simplify the implementation of both control plane and data plane operations of transition mechanisms.
      A centralized Controller is added into the network to control the forwarding rules of both CPE and BR,
      leaving other devices in ISP network between CPE and BR as traditional devices.
      The forwarding rules of transition devices can be changed easily by changing network applications on the Controller,
      thus this framework can implement transition scenarios easily, e.g. IPv4 over IPv6 hub and spoke model that Lightweight 4over6 does.
      Both CPE and BR can be implemented by standardized SDN switches thus no dedicated devices are needed, so
      it can reduce the cost of deploying new mechanisms for customer networks.
    </t>  
  
  </section>

  <section anchor="Terminology" title="Terminology">
    <t>This document uses the following terms:</t>
      
    <t><list style="hanging" hangIndent="25">
       <t hangText="Customer Premises Equipment Switch (CPE Switch):">A dual-stack L3 switch that performs the flow-based packet forwarding function.
       	  It implements the OpenFlow protocol <xref target="OpenFlow" />
          It can be the home gateway or BNG.
       </t>

       <t hangText="Border Relay Switch (BR Switch):">A dual-stack L3 switch that performs the flow-based packet forwarding function.
       	  It implements the OpenFlow protocol <xref target="OpenFlow" />
          It is on the boarder of the ISP network and IPv4/ IPv6 Internet. 
       </t>
       
       <t hangText="Controller:">A centralized manager that controls both CPE Switch and BR Switch.
          The Controller is treated as a logical device that can be a single or multiple physical devices.
       </t>
          
       <t hangText="Flow-based Packet Forwarding:">A function that forwards packets according to the forwarding rules specified by a flow table.
          A typical forwarding rule includes a match field and a action set.
          The match field specifies a certain flow, which is a set of packets that share some common features (e.g. same source and destination address).
          The action set specifies the actions that should act on the certain flow (e.g. forward a packet, encapsulate or decapsulate a packet).
       </t>
    </list></t>
  
  </section>
  
  <section anchor="Overview" title="Framework Overview">
    <t>The architecture of the proposed unified IPv6 transition framework is illustrated in Figure 1.
      The customer LAN connects the IPv6 ISP network through CPE Switch.
      The ISP Network accesses the Internet through BR Switch. Devices in the ISP Network are not required
      to be managed by the Controller, thus the operator only needs to upgrade the CPEs and BRs.
    </t> 
    
    <figure align="center">
    <artwork><![CDATA[                                                               
                            +---------------+
                      ______|  Controller   |______
                     |      |               |      |         
                     |      +---------------+      |            
                     |                             |
 ______________      v       _______________       v      ______________
|              | +--------+ |               | +--------+ |              |
| Customer LAN |_|  CPE   |_|    ISP IPv6   |_|   BR   |_|    IPv4      |
|              | | Switch | |    Network    | | Switch | |   Internet   |
|______________| +--------+ |_______________| +--------+ |______________|
                                              
                           
    ]]></artwork>
    <postamble> Figure 1  Architecture Overview </postamble>
    </figure>
    
    <t>Both CPE Switch and BR Switch perform flow-based forwarding, and are managed by the Controller.
    	 Since CPE Switch can work as the gateway of customer network, it also needs to support
    	 traditional CPE functions, such as be compatible with <xref target="RFC7084"/>.
    </t>
    
    <t>Controller is responsible for controlling the forwarding behavior of both CPE Switch and BR Switch.
      Controller can be an individual or a cluster of physical devices.
      The Controller configures the forwarding rules in the flow tables maintained by the CPE Switch and BR Switch
      according to the packets passed from Switches. There can also be separate physical controllers at CPE side and BR side,
      but both controllers needs to share their network state so they can work as a single logical controller. The state sharing
      method is out of the scope of this document.
    </t>
    
    <t>Controller communicates with Switch using protocols that is able to carry flow information and flow table configuration.
    	Currently we suggest and choose Openflow <xref target="OpenFlow" /> as the best approach, however some changes are
    	proposed to support IPv6 tunneling and port set based forwarding.
    </t>
    
  </section>
  
  <section anchor="Control" title="Control Plane Behavior">
    <t>The Controller configures both CPE Switch and BR Switch through flow configuration. The switches are configured or pre-installed with
      default forwarding policy that forwards all unknown flows to the controller. The controller then installs forwarding rules for the
      specific flow into the switch. All remaining packets of the same flow are processed based on this rule and will not be forwarded to
      the Controller. The definition of a flow depends on the forwarding policy. For example, in MAP-E or Lightweight 4over6 scenario, the
      BR Switch treats all traffic from the same CPE as a single flow.
    </t>
    
    <t>Some transition mechanisms require provisioning parameters to CPE. For example, DS-Lite, MAP-E and Lightweight 4over6 use DHCPv6
     to provision IPv6 address of AFTR/BR to CPE. Lightweight 4over6 and MAP-E provision IPv4 address and port set to CPE. Since these parameters
     can be represented by flow forwarding rules, in this framework such DHCPv6 based softwire provisioning is not required. Instead these softwire
     configuration are embedded into forwarding rules and provisioned to CPE Switch through flow configuration, e.g. the IPv4 address of the 
     CPE can be represented as the value of set-field actions.
     </t>
     
     <t>The connection between the switches and the controller SHOULD be through IPv6. In order to build the IPv6 based connection, the 
     	switches MUST be configured with an IPv6 address and the IPv6 address of the Controller. Since the CPE side requires automatic configuration,
     	DHCPv6 is RECOMMENDED for the CPE Switch to get its IPv6 address or prefix, and the controller address.
     </t>
    
  </section>
  
  <section anchor="Data" title="Data Plane Behavior">
    <t>When received an incoming packet which is the initial packet of an unknown flow,
      CPE Switch and BR Switch MUST pass the packet to Controller to ask for the forwarding rule.
      Controller determines how to proceed the flow,
      and interpret the process into a set of forwarding rule configurations.
      Controller then installs these configurations to CPE Swtich and/or BR Switch.
      When receiving the subsequent packets of the flow, CPE Switch and BR Switch will apply the same actions to them,
      according to the forwarding rules in the flow table.
    </t>
    
    <t>Both CPE Switch and BR Switch MUST support the IPv6 tunneling encapsulation/decapuslation function required in <xref target="RFC6333" />,
      <xref target="I-D.ietf-softwire-lw4over6"/> and <xref target="I-D.ietf-softwire-map"/> as actions to the incoming IPv4 packets.
      IPv4-in-IPv6 tunnling SHOULD be implemented by Switches. When it is not supported, other tunneling format such as GRE tunnel can be used.
      The encapsulation action is specified with two parameters: source and destination IPv6 address.
    </t>
    
    <section title="Controller-based NAT44">
    <t>In MAP-E/Lightweight 4over6 CPE, NAT44 is required. In this framework, NAT44 can be simply supported by flow-based forwarding rules.
       Since protocol header modification is supported by Switches (i.e. set-field action in OpenFlow),
       NAT44 can be implemented as modification of source/destination IPv4 addresse and port fields. As an example,
       for the upstreaming traffic on CPE Switch, the Switch asks for the forwarding rule of each flow identified by (source IPv4 address, source port),
       and the Controller allocates an address and a port for each flow and orders the Switch to rewrite the source IPv4 address and port of the
       upstreaming flow, and the destination IPv4 address and port of the corresponding downstreaming flow. The NAT44 state is maintained by the Controller.
    </t>
    </section>
    
    <section title="Port-Set Based Packet Matching">
    <t>Since MAP-E/Lightweight 4over6 requires port-based IPv4 address sharing, there may be thousands of ports of the same IPv4 address
       allocated to the same CPE. To reduce the amount of forwarding rules in BR Switch,
       when BR Switch matching an incoming packet, it SHOULD support the port-set based matching as defined in
       in Section 5.1 of <xref target="I-D.ietf-softwire-map"/>. The BR Switch SHOULD support and accept match field masking for ports
       (see section 7.2.2.5 of <xref target="OpenFlow" />). For the PSID usage, the PSID bits (k bits) in the port mask are filled with "1"s,
       and the remaining bits (a+m bits) are filled with "0"s.
    </t>
    </section>
  </section>
  
  <section title="Example: 4over6 Mode">
    <t>This section describes an example of running IPv4 over IPv6 tunneling mode in this framework. The network behavior is similar to Lightweight 4over6,
    	 however the DHCPv6-based IPv4 address and PSID provisioning for lwB4 is not needed.
    	 In this mode, The Customer LAN is an
    	 IPv4 or dual-stack network, and the ISP Network is an IPv6 network. Initially the CPE Switch is configured with IPv6 prefix
    	 through DHCPv6 Prefix Delegation and connects to the Controller through OpenFLow. Then the CPE Switch is ordered to pass all unknown packets to the Controller.
  	</t>
  	<t>The Controller manages the binding between IPv4 addresses and IPv6 addresses. When a new CPE Switch connects to the Controller,
  		 the Controller allocates an IPv4 address and a port set for the CPE Switch, and installs per-subscriber scale
  		 forwarding rule(s) in BR Switch. To work as MAP-E mode, the IPv4 address and port set are calculated from the CPE's IPv6 prefix.
  		 To work as Lightweight 4over6 mode, the IPv4 address and port set are allocated dynamically.
    </t>
    <t>
  		 In case that CPE's NAT44 state is maintained in Controller, when received an unknown packet from
  		 CPE Switch, the Controller picks one port from the port set of the CPE Switch and installs the forwarding rule in the CPE Switch,
  		 to rewrite the source IPv4 address and port into public ones on the flow.
  		 Both forwarding rules in CPE Switch and BR Switch include IPv4-in-IPv6 tunnel encapsulation/decapuslation action, taking the IPv6
  		 address of the opposite as an parameter.
    </t>
    
    <section title="Forwarding Rules">
    <t>A CPE Switch is configred with following rules:
      <list style="empty">
    	  <t>Decapsulation rule: For all IPv6 traffic from ISP network with the protocol type 4, pop the IPv6 tunnel header.</t>
    	  <t>NAT rule: For each flow received from LAN network and identified by (source IPv4 address, source port): rewrite source IPv4 address and source port
    	  to public values specified by Controller; also rewrite destination IPv4 address and port of the corresponding opposite flow.</t>
    	  <t>Encapsulation rule: For all IPv4 traffic from LAN network: push a IPv6 tunnel header (protocol type 4), of which the source and destination address are specified by the Controller.
    	     The tunnel source address is one of the CPE Switch's addresses chosen by the Controller. The tunnel destination address is the BR Switch's address.
    	  </t>
    	</list>
    </t>
    
    <t>A BR Switch is configured with following rules:
      <list style="empty">
    	  <t>Decapsulation rule: For all IPv6 traffic from ISP network with the protocol type 4, pop the IPv6 tunnel header and forward to Internet.</t>
    	  <t>Encapsulation rule: For each flow received from Internet side and identified by (destination IPv4 address, destination port set):
    	  	 push a IPv6 tunnel header (protocol type 4), of which the source and destination address are specified by the Controller.
    	  	 The tunnel source address is the BR Switch's address. The tunnel destination address is one of the CPE Switch's address,
    	  	 which MUST be the same address used in CPE Switch's forwarding rule. By masking a port set mask when doing port matching,
    	  	 one matching rule can match a set of ports.
    	  </t>
    	</list>
    </t>
    </section>
    
    <section title="Mesh Mode">
	    <t>This framework can support mesh mode for Lightweight 4over6. In mesh mode, if the (destination IPv4 address, destination port)
	    	 of a LAN side incoming flow on a CPE Switch (CPE1) belongs to another CPE Switch (CPE2), the tunnel destinaiton address of
	    	 the encapsulation action for this flow is set to CPE2's IPv6 address directly. The priority of mesh mode encapsulation rule
	    	 is higher than default encapsulation rule.
	    </t>
    </section>    
  </section>
 
  <section anchor="Security" title="Security Considerations">
    <t>As Switch should always send unknown flows to Controller, the link between Switch and Controller might be vulnerable to a typical DoS attack,
      which is done by flooding new sessions and can exhaust all available resources of Switch and/or Controller.
      Some monitoring or filtering approaches should be used to prevent against such an attack.
      In addition, Controller can implement a policy that restricts the resource allocated to a Switch,
      or restricts the resource of Switch allocated to a flow.
    </t>
    
    <t>Further security consideration is TBD.</t>
    
  </section>
  <section anchor="IANA" title="IANA Considerations">
    <t>This document does not include an IANA request.</t>
  </section>
</middle>

<back>

  <references title="Normative References">
    &rfc2119;

      <reference anchor="OpenFlow" target="https://www.opennetworking.org/images/stories/downloads/sdn-resources/onf-specifications/openflow/openflow-spec-v1.4.0.pdf">
        <front>
          <title>OpenFlow Switch Specification 1.4.0</title>
          <author>
            <organization>Open Networking Foundation</organization>
          </author>
          <date />
        </front>
      </reference>
    &I-D.ietf-softwire-lw4over6;
    &I-D.ietf-softwire-map;
  </references>

  <references title="Informative References">
    &rfc7084;
    <!--&rfc6146;-->
    <!--&rfc6241;-->
    &rfc6333;  
  </references>

</back>
</rfc>
